digraph {
	fixedsize=true;
	concentrate=true;
	node [shape=rect margin="0.25,0.125"];
	start [shape=invhouse];

	node [style=filled fillcolor="#FFEEBB"]; # cond
	cond1 [tooltip="check?type=buff&kind=target&buff=Effect_MP_ExpGoblinA_N_1"]; # has Effect_MP_ExpGoblinA_N_1 buff in target
	skill_usable1 [tooltip="check?type=skill&slot=1&kind=usable"]; # active 1 usable
	skill_usable2 [tooltip="check?type=skill&slot=2&kind=usable"]; # active 2 usable
	usable_cell1 [tooltip="check?type=skill&slot=1&kind=movable"]; # is cell exists that can use active 1
	usable_cell2 [tooltip="check?type=skill&slot=2&kind=movable"]; # is cell exists that can use active 2

	node [fillcolor="#BBCCFF"];
	skill1 [tooltip="skill?slot=1&target=buff&buff=Effect_MP_ExpGoblinA_N_1"]; # use active 1 to has Effect_MP_ExpGoblinA_N_1 buff
	skill1_1 [tooltip="skill?slot=1&target=near.flying"]; # use active 1 to near flying first
	skill1_2 [tooltip="skill?slot=1&target=near.heavy"]; # use active 1 to near heavy second
	skill1_3 [tooltip="skill?slot=1&target=flying"]; # use active 1 to flying then
	skill2 [tooltip="skill?slot=2&target=near.flying&row=2"]; # use active 2 to near flying first, target num > 2 in row
	skill2_1 [tooltip="skill?slot=2&target=near.heavy&row=2"]; # use active 2 to near heavy second, target num > 2 in row
	skill2_2 [tooltip="skill?slot=2&target=near&row=2"]; # use active 2 to near third, target num > 2 in row
	skill2_3 [tooltip="skill?slot=2&target=flying"]; # use active 2 to flying then

	node [fillcolor="#7788aa"];
	move1 [tooltip="move?slot=1"]; # move to cell that can use active 1
	move2 [tooltip="move?slot=2"]; # move to cell that can use active 2
	wait [tooltip="wait" fillcolor="#999999"]; # wait

	start -> cond1;

	cond1 -> skill1 [label="y"];
	cond1 -> skill_usable2 [label="n"];
	skill1 -> skill_usable2 [label="f"];

	skill_usable2 -> skill2 [label="y"];
	skill_usable2 -> skill_usable1 [label="n"];

	skill2 -> skill2_1 -> skill2_2 -> skill2_3 [label="f"];

	skill_usable1 -> skill1_1 [label="y"];
	skill_usable1 -> usable_cell1 [label="n"];

	skill1_1 -> skill1_2 -> skill1_3 [label="f"];

	usable_cell1 -> move1 [label="y"];
	usable_cell1 -> usable_cell2 [label="n"];

	usable_cell2 -> move2 [label="y"];
	usable_cell2 -> wait [label="n"];
}