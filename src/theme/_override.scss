@mixin button-outline-variant(
	$color,
	$color-hover: color-yiq($color),
	$hover-background: lighten($color, 12.5%),
	$hover-border: lighten($color, 12.5%),
	$active-background: $color,
	$active-border: $color,
	$active-hover-background: darken($color, 12.5%),
	$active-hover-border: darken($color, 12.5%)
) {
	color: $color;
	border-color: $color;

	&:focus,
	&.focus {
		box-shadow: 0 0 0 $btn-focus-width rgba($color, 0.5);
	}

	&.disabled,
	&:disabled {
		color: $color;
		background-color: transparent;
	}

	&:not(:disabled):not(.disabled):active,
	&:not(:disabled):not(.disabled).active,
	.show > &.dropdown-toggle {
		color: color-yiq($active-background);
		background-color: $active-background;
		border-color: $active-border;

		&:focus {
			@if $enable-shadows and $btn-active-box-shadow != none {
				@include box-shadow($btn-active-box-shadow, 0 0 0 $btn-focus-width rgba($color, 0.5));
			} @else {
				// Avoid using mixin so we can pass custom focus shadow properly
				box-shadow: 0 0 0 $btn-focus-width rgba($color, 0.5);
			}
		}
	}

	&:not(:disabled):not(.disabled):hover,
	&:not(:disabled):not(.disabled):focus {
		color: $color-hover;
		background-color: $hover-background;
		border-color: $hover-border;
	}

	&:not(:disabled):not(.disabled):active:hover,
	&:not(:disabled):not(.disabled):active:focus,
	&:not(:disabled):not(.disabled).active:hover,
	&:not(:disabled):not(.disabled).active:focus {
		color: $color-hover;
		background-color: $active-hover-background;
		border-color: $active-hover-border;
	}
}

$theme-colors: map-merge(
	(
		"stat-atk": #fd4280,
		"stat-def": #0cb9eb,
		"stat-hp": #98d718,
		"stat-acc": #98d718,
		"stat-eva": #98d718,
		"stat-crit": #fe4d3f,
		"apocrypha": #07499b,
		"event-exchange": #d040e0,
		"exchange": #0cb9eb,
	),
	$theme-colors
);
