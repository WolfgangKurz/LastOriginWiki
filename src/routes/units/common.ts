import { BUFFEFFECT_TYPE } from "@/types/BuffEffect";

export const ExcludedBuffEffectTypes: BUFFEFFECT_TYPE[] = [ // 사용처가 없어 제외
	BUFFEFFECT_TYPE.STAGE_THORNS_RATIO,
	BUFFEFFECT_TYPE.STAGE_REFLECTPHYSICS_VALUE,
	BUFFEFFECT_TYPE.STAGE_REFLECTFIRE_VALUE,
	BUFFEFFECT_TYPE.STAGE_REFLECTICE_VALUE,
	BUFFEFFECT_TYPE.STAGE_REFLECTLIGHTNIG_VALUE,
	BUFFEFFECT_TYPE.STAGE_BLOCK_GRID, // 전체 보호 (확장 패시브에 존재)
	BUFFEFFECT_TYPE.STAGE_SHIELD_RATIO_LIMITED,
	BUFFEFFECT_TYPE.STAGE_SHIELD_VALUE_LIMITED,
	BUFFEFFECT_TYPE.STAGE_CHARCHANGE_PERMANENT, // STAGE_CHARCHANGE_LIMITED 통합
	BUFFEFFECT_TYPE.STAGE_LOCKON01_TIME,
	BUFFEFFECT_TYPE.STAGE_ADDDAMAGE_VALUE, // 받는 피해 증가 고정값 (확장 패시브에 존재)
	BUFFEFFECT_TYPE.STAGE_AGRO_VALUE, // 공격 우선 순위 감소 (확장 패시브에 존재)
	BUFFEFFECT_TYPE.STAGE_GRID_CHANGE, // 특정 그리도 교대 (확장 패시브에 존재)
	BUFFEFFECT_TYPE.STAGE_ANALYZE, // 분석 (확장 패시브에 존재)
	BUFFEFFECT_TYPE.PROVOKE_ATTACKER, // 공격자에게 도발 부여 (확장 패시브에 존재)
	BUFFEFFECT_TYPE.DAMAGE_RECOVER_THISROUND,
	BUFFEFFECT_TYPE.SAME_SKILL_HIT_DAMAGE_REDUCE,
	BUFFEFFECT_TYPE.ADD_ROLE_TYPE,
	BUFFEFFECT_TYPE.WIDE_DAMAGE_RATIO,
];
export const CombinedBuffEffectTypes: Partial<Record<BUFFEFFECT_TYPE, BUFFEFFECT_TYPE[]>> = {
	[BUFFEFFECT_TYPE.STAGE_CHARCHANGE_LIMITED]: [BUFFEFFECT_TYPE.STAGE_CHARCHANGE_PERMANENT],

	// [BUFFEFFECT_TYPE.STAGE_REFLECTPHYSICS_RATIO_DEFENDER]: [
	// 	BUFFEFFECT_TYPE.STAGE_REFLECTPHYSICS_RATIO_DEFENDER,
	// 	BUFFEFFECT_TYPE.STAGE_REFLECTFIRE_RATIO_DEFENDER,
	// 	BUFFEFFECT_TYPE.STAGE_REFLECTICE_RATIO_DEFENDER,
	// 	BUFFEFFECT_TYPE.STAGE_REFLECTLIGHTNIG_RATIO_DEFENDER,
	// ],
};
