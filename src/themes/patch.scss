@each $rarity, $color in $rarities {
	.btn.btn-outline-rarity-#{$rarity} {
		$c: darken($color, 50%);
		border-color: $c;

		&:not(.active) {
			color: $c;
		}
	}
}

thead.thead-dark th,
td.bg-dark,
th.bg-dark {
	color: #fff;
	background-color: #212529;
	border-color: #454d55 !important;
}

table.table:not(.table-borderless) > tbody,
table.table:not(.table-borderless) > thead {
	> tr {
		border-width: 0 !important;

		> td,
		> th {
			border-width: 1px !important;
		}
	}
}

.card-header[role="button"]:focus,
.nav-tabs .nav-link:focus {
	outline: none;
}
.nav-tabs .nav-link {
	$n: $nav-tabs-border-width;
	$v: unset;

	@if str-index($n, "var(") {
		$v: calc((#{$n}) * -2);
	} @else {
		$v: ($n) * -2;
	}
	margin-bottom: $v;
}

table.table-fixed {
	table-layout: fixed;
}

@each $breakpoint in map-keys($grid-breakpoints) {
	@include media-breakpoint-up($breakpoint) {
		$infix: breakpoint-infix($breakpoint, $grid-breakpoints);

		.d#{$infix}-inline-grid {
			display: inline-grid !important;
		}

		@for $i from 7 through 10 {
			.row-cols#{$infix}-#{$i} {
				@include row-cols($i);
			}
		}
	}
}

.form-check-label {
	user-select: none;
}

@each $breakpoint in map-keys($grid-breakpoints) {
	@include media-breakpoint-up($breakpoint) {
		$infix: breakpoint-infix($breakpoint, $grid-breakpoints);

		@if $infix != "" {
			@each $key, $ratio in $aspect-ratios {
				.ratio#{$infix}-#{$key} {
					--#{$variable-prefix}aspect-ratio: #{$ratio};
				}
			}
		}
	}
}
