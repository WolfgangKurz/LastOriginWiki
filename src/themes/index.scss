@import "!/bootstrap/scss/bootstrap.scss";

@import url("https://cdnjs.cloudflare.com/ajax/libs/pretendard/1.3.9/variable/pretendardvariable-dynamic-subset.min.css");
@import url("https://cdnjs.cloudflare.com/ajax/libs/pretendard-jp/1.3.9/variable/pretendardvariable-jp-dynamic-subset.min.css");

@import url("https://fonts.googleapis.com/css2?family=IBM+Plex+Sans+KR:wght@400;500;600;700&display=swap");
@import url("https://fonts.googleapis.com/css2?family=IBM+Plex+Sans:wght@400;500;600;700&display=swap");
@import url("https://fonts.googleapis.com/css2?family=Exo+2:wght@400;700&display=swap");

html,
body {
	height: 100%;
	text-align: center;
}

#page {
	height: 100%;
}

html,
body,
body .popover,
body .tooltip {
	-webkit-font-smoothing: antialiased;
	-moz-osx-font-smoothing: grayscale;
	font-family: "Pretendard JP Variable", "Pretendard Variable", sans-serif;
	font-weight: 400;
	font-size: 16px;
}
.btn-group > .btn.active + .btn.active,
.btn-group > .btn.active + .btn:focus,
.btn-group > .btn.active + .btn:hover,
.btn-group > .btn:focus + .btn.active,
.btn-group > .btn:hover + .btn.active {
	border-left: 1px solid rgba(255, 255, 255, 0.5) !important;
}

@each $rarity, $value in $rarities {
	.rarity-#{$rarity} {
		background-color: $value;
		border-color: darken($value, 15%);
	}
	.rarity-#{$rarity}-force {
		background-color: $value !important;
		border-color: darken($value, 15%) !important;
	}

	.rarity-#{$rarity}-border {
		border-color: darken($value, 15%);
	}
	.rarity-#{$rarity}-border-force {
		border-color: darken($value, 15%) !important;
	}

	.rarity-#{$rarity}-text {
		color: darken($value, 15%);
	}
	.rarity-#{$rarity}-text-force {
		color: darken($value, 15%) !important;
	}
}

@each $key, $value in $colors {
	.bg-#{$key} {
		background-color: $value;
	}
	.text-#{$key} {
		color: $value;
	}
}

@each $breakpoint in map-keys($grid-breakpoints) {
	@include media-breakpoint-up($breakpoint) {
		$infix: breakpoint-infix($breakpoint, $grid-breakpoints);

		.clearfix#{$infix}::after {
			content: "";
			display: table;
			clear: both;
		}
	}
}

.word-keep {
	word-break: keep-all;
}
.white-space-pre {
	white-space: pre-wrap;
}

.flex-1 {
	flex: 1;
}

.preload-area {
	position: absolute;
	display: inline-block;
	left: 0;
	top: 0;
	width: 1px;
	height: 1px;
	overflow: hidden;
	pointer-events: none;
	opacity: 0.000001;
}

@each $color, $value in $colors {
	.btn-#{$color} {
		@include button-variant($value, $value);
	}
}

@each $color, $value in $colors {
	.btn-outline-#{$color} {
		@include button-outline-variant($value);
	}
}

@import "./component/btn-grid";

.text-underline {
	text-decoration: underline;
}

.font-ibm {
	@include font-ibm;
}
.font-exo2 {
	@include font-exo2;
}

.clear-both {
	clear: both;
}

@import "./patch";
